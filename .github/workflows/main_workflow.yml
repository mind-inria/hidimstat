# Management of the action do made during a pull request

name: 'Main_workflow'
on:
  pull_request:
    branches: main
  # allows to push on branches
  push:
    branches: main

# disable all the permission for the workflow
permissions: {}

# Cancel existing runs 
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get_information:
    name: Get Information
    # information is: commit message for PR
    runs-on: ubuntu-latest
    outputs:
      COMMIT_MSG: ${{ steps.get_commit_message.outputs.COMMIT_MSG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 3 
          # require to get the previous commit for getting their messages
          # in a PR the last commit is the commit merge with main

      - name: Get commit message
        id: get_commit_message
        # return an empty message when the event is not from a PR
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "COMMIT_MSG=$(git log -1 --pretty=%B ${{ github.event.pull_request.head.sha }})" # use for debugging
            echo "COMMIT_MSG=$(git log -1 --pretty=%B ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT
          else
            echo "COMMIT_MSG=" >> $GITHUB_OUTPUT
          fi

  linter:
    name: Linter
    needs: [get_information]
    uses: ./.github/workflows/call_black.yml
  
  tests:
    name: tests
    needs: [linter, get_information]
    if: ${{ !contains(needs.get_information.outputs.COMMIT_MSG, '[skip tests]') }}
    uses: ./.github/workflows/call_test_package.yml
  
  no_tests:
    name: no_tests
    needs: [linter, get_information]
    if: ${{ contains(needs.get_information.outputs.COMMIT_MSG, '[skip tests]') }}
    uses: ./.github/workflows/call_no_test.yml
  
  condition:
    name: condition publishing
    runs-on: ubuntu-latest
    outputs:
      CONDITION_PUBLISH: ${{ steps.condition_publish.outputs.CONDITION_PUBLISH }}
    needs: [get_information, tests, no_tests]
    env: 
      COND: |
          ${{ (needs.tests.result != 'cancelled' 
               && needs.tests.result != 'failure' 
               && needs.no_tests.result != 'cancelled' 
               && github.event.pull_request.draft == false
              )
              || contains(needs.get_information.outputs.COMMIT_MSG, '[doc ')
          }}
    if: ${{ always() }}
    steps:
      - name: print condition
        id: condition_publish
        run: |
          echo "COND=$COND"
          if $COND
          then 
            echo "CONDITION_PUBLISH='PUBLISH'" >> $GITHUB_OUTPUT
          else
            echo "CONDITION_PUBLISH='NO PUBLISH'" >> $GITHUB_OUTPUT
          fi
  
  tests_publish:
    name: tests_publish
    needs: [condition]
    if: ${{ needs.condition.outputs.CONDITION_PUBLISH == 'PUBLISH' }}    
    permissions:
      pull-requests: write
    uses: ./.github/workflows/call_publish_result.yml

  debugger:
    needs: condition 
    runs-on: ubuntu-latest
    steps:
      - name: print output
        run: 
          echo ${{ needs.condition.outputs.CONDITION_PUBLISH }} 
          if ${{ needs.condition.outputs.CONDITION_PUBLISH }}
          then 
          echo "true cond"
          fi
    if: ${{ always() }}