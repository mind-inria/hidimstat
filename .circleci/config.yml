version: 2.1

parameters:
    # Parameters required to trigger the execution of the "host_docs" job
    GITHUB_RUN_URL:
        type: string
        default: none

jobs:
  python3:
    docker:
      - image: cimg/python:3.13.2
    environment:
      - PYTHON_VERSION: "3.13.2"
      - OMP_NUM_THREADS: 2
      - CONDA_ENV_NAME: testenv
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - restore_cache:
          key: saved-cache
      - run:
          command: ./build_tools/circle/build_doc.sh
          no_output_timeout: 40m
      # store the documentation for see it in a PR
      - store_artifacts:
          path: doc_conf/_build/html
          destination: doc_conf
      - store_artifacts:
          path: ~/output_sphinx.log
          destination: log
      # Persists generated documentation so that it can be attached and deployed
      # in the 'deploy' step.
      - persist_to_workspace:
          root: doc_conf/_build/html
          paths: .
      - save_cache:
          key: saved-cache
          paths:
            - /home/circleci/nilearn_data
            - /home/circleci/sklearn_data

  get-tests-reports:
    docker:
      - image: cimg/base:2025.05
    environment:
      - GITHUB_ARTIFACT_URL: << pipeline.parameters.GITHUB_RUN_URL >>
    steps:
      - checkout
      - run:
            name: "get reports"
            command: |
              set -x -e
              wget $GITHUB_ARTIFACT_URL
              unzip pytest-results-all.zip -d test_reports
              mkdir -p doc_conf/_build/html
              mv test_reports doc_conf/_build/html
      # store the reports to display for a PR
      - store_artifacts:
          path: doc_conf/_build/html/test_reports
          destination: doc_conf/test_reports
      # store the reports for adding them to the documentation
      - persist_to_workspace:
          root: doc_conf/_build/html/
          paths: .

  deploy:
    docker:
      - image: cimg/python:3.13
    environment:
      - USERNAME: "hidimstat-circleci"
      - ORGANIZATION: "hidimstat"
      - DOC_REPO: "hidimstat.github.io"
      - DOC_URL: ""
      - EMAIL: "hidimstat@circleci.com"
      - MINICONDA_PATH: ~/miniconda
      - CONDA_ENV_NAME: testenv
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:8Ryl+7R+ElSw3nmGIeoEwKJth2nxOO3G/a3cHQscAfA"
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      # Attach documentation generated in the 'python3' step so that it can be
      # deployed.
      - attach_workspace:
          at: doc_conf/_build/html
      - run:
            command: |
                mkdir -p ~/.ssh
                ssh-keyscan github.com >> ~/.ssh/known_hosts
                ls -ltrh doc_conf/_build/html
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" =~ ^main$|^[0-9]+\.[0-9]+\.X$ ]]; then
            bash build_tools/circle/push_doc.sh doc_conf/_build/html
            fi

  # this action is only to avoid any error
  wait-action:
    docker:
      - image: cimg/base:2025.05
    steps:
      - run:
            name: "wait"
            command: sleep 10

workflows:
  version: 2
  wait:
    jobs:
      - wait-action
  build-doc-and-deploy:
    # action trigger by updating the link of github
    when:
      not:
        equal: [none, << pipeline.parameters.GITHUB_RUN_URL >>]
    jobs:
      - python3
      - get-tests-reports
      - deploy:
          requires:
            - get-tests-reports
            - python3